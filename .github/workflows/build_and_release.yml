name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Build project
      run: dotnet build --configuration Release

    - name: Check environment variables
      run: echo "DOTNET_ROOT is set to $DOTNET_ROOT"

    - name: Test Token with API Call in Workflow
      run: |
        curl -H "Authorization: token ${{ secrets.GIT_ACTIONS }}" https://api.github.com/user

    - name: Print current working directory
      run: echo %cd%  # This is for Windows runners

    - name: List directory contents
      run: dir  # This is for Windows runners

    - name: Zip files
      run: |
        Compress-Archive -Path ./OculusKiller/bin/x64/Release/OculusDash.exe, ./OculusKillerInstaller.bat -DestinationPath OculusRelease.zip

    - name: Create Release and Upload Zip
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OculusRelease.zip
        asset_name: OculusRelease.zip
        asset_content_type: application/zip

  cleanup:
    needs: build_and_release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cleanup old releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 5
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS }}
