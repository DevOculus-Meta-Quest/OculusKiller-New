name: Build and Release

on:
  push:
  schedule:
    - cron: '0 0 */3 * *' # Every 3 days

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0'

    - name: Build
      run: dotnet build --configuration Release

    - name: Print current working directory
      run: echo %cd%  # This is for Windows runners

    - name: List directory contents
      run: dir  # This is for Windows runners

    - name: Zip the build
      run: |
        Compress-Archive -Path ./OculusKiller/bin/x64/Release/* -DestinationPath ./OculusKiller.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: release-${{ github.sha }}-${{ github.run_number }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false
      env:
        DOTNET_ROOT: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Using your PAT here

    - name: Upload Zipped Build to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OculusKiller.zip
        asset_name: OculusKiller.zip
        asset_content_type: application/zip

  cleanup:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cleanup old releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 5
        token: ${{ secrets.GITHUB_TOKEN }}  # Using your PAT here for cleanup as well
